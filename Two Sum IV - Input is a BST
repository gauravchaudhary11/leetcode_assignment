/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void inorder(TreeNode root,HashSet<Integer>set){
        if(root==null){
            return;
        }
        inorder(root.left,set);
        set.add(root.val);
        inorder(root.right,set);
        
    }
    public boolean findTarget(TreeNode root, int k) {
        HashSet<Integer>set=new HashSet<>();
        if(root==null ){
            return false;
        }
        inorder(root,set);
        for(int num:set){
            int tar=k-num;
            if(set.contains(tar) && tar != num){
                return true;
            }
        }
        return false;

    }
}
